name: Python CI

on:
  pull_request:
    paths:
      - '**.py'
      - 'requirements.txt'
      - 'pyproject.toml'
      - '.github/workflows/ci-python.yml'
  push:
    branches:
      - main
    paths:
      - '**.py'
      - 'requirements.txt'
      - 'pyproject.toml'

jobs:
  test:
    name: Test (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10', '3.11']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run pytest
        run: |
          pytest tests/ -v --tb=short

      - name: Run pytest with coverage (Python 3.11 only)
        if: matrix.python-version == '3.11'
        run: |
          pip install pytest-cov
          pytest tests/ --cov=src --cov=. --cov-report=term-missing --cov-report=xml

      - name: Upload coverage to Codecov (Python 3.11 only)
        if: matrix.python-version == '3.11'
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          fail_ci_if_error: false

  lint:
    name: Lint with Ruff
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Ruff
        run: |
          python -m pip install --upgrade pip
          pip install ruff

      - name: Run Ruff linter
        run: |
          ruff check . --output-format=github

      - name: Run Ruff formatter check
        run: |
          ruff format --check .

  type-check:
    name: Type check with mypy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install mypy

      - name: Run mypy
        run: |
          mypy src/ --ignore-missing-imports --no-strict-optional
